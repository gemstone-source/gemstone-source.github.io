I"ç(<h1 id="android-apk-penetration-testing-part-02">ANDROID APK PENETRATION TESTING PART 02.</h1>
<h2 id="introduction">Introduction.</h2>
<p>This is the part two of android pentest, part one documentation is found <a href="https://gemstone-source.github.io/android-pentest/">here</a>. <br /></p>

<p>In this document I will show how to intercept android application traffics using <code class="language-plaintext highlighter-rouge">burpsuite</code>. In previous post I showed how to capture traffics from web browser but using same methodology on intercepting <code class="language-plaintext highlighter-rouge">android apk</code> wont work. <br /></p>

<p>To achieve some modifications must be done and to do this there are steps to followed as explained below:-</p>
<h2 id="phase-01">Phase 01.</h2>
<p>I will tart continue where I ended on the first post and all steps on it will be applied here. To achieve this I will use <code class="language-plaintext highlighter-rouge">instagram</code> for android as case study. I will download and install from <code class="language-plaintext highlighter-rouge">google-playstore</code>.</p>

<p><img src="/assets/img/android/001.png" alt="image" /></p>

<p>After installing I will try to open and check if requests are forwarded to <code class="language-plaintext highlighter-rouge">burpsuite</code></p>

<p><img src="/assets/img/android/002.png" alt="image" /></p>

<p>No request has been captured with <code class="language-plaintext highlighter-rouge">burpsuite</code> this is because of <code class="language-plaintext highlighter-rouge">SSL Pinning</code> .  <code class="language-plaintext highlighter-rouge">instagram</code> and many other apps use <code class="language-plaintext highlighter-rouge">SSL Pinning</code> to prevent interception of their <code class="language-plaintext highlighter-rouge">HTTPS</code> traffic. This means that even if you intercept the traffic with Burp Suite, you wonâ€™t be able to read it because the app is expecting a specific <code class="language-plaintext highlighter-rouge">SSL Certificate</code>. For more reference about it you can check it <a href="https://www.indusface.com/learning/what-is-ssl-pinning-a-quick-walk-through/">indusface</a> or <a href="https://medium.com/@anandgaur22/ssl-pinning-in-android-14851dc41703">here</a>.</p>

<h2 id="phase-02">Phase 02.</h2>
<p>To bypass <code class="language-plaintext highlighter-rouge">SSL Pinning</code> to intercept <code class="language-plaintext highlighter-rouge">HTTPS</code> traffic, this can involve techniques such as patching the app, using Frida, or employing a tool like <code class="language-plaintext highlighter-rouge">SSLUnpinning</code>. But in this post I will use <code class="language-plaintext highlighter-rouge">frida</code>.</p>
<h3 id="install-frida-tools">Install Frida Tools.</h3>
<p>To install <code class="language-plaintext highlighter-rouge">frida</code> this simple command can be used. This will be used on Linux machine and I can say it will act as client.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>pip3 install frida-tools
</pre></td></tr></tbody></table></code></pre></div></div>
<p><img src="/assets/img/android/006.png" alt="image" /></p>

<p>Sometimes <code class="language-plaintext highlighter-rouge">pip3</code> fails because it can not create path but to avoid this you can set path manually or use <code class="language-plaintext highlighter-rouge">sudo</code> although it is not recommended. After that then <code class="language-plaintext highlighter-rouge">frida</code> will be available on machine.</p>
<h3 id="download-frida-server-from-github">Download Frida Server from github.</h3>
<p>For this part to be successful then you may need to know your android architecture and since am using <code class="language-plaintext highlighter-rouge">genymotion</code> this will be quite simple.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td> --><td class="rouge-code"><pre> â””â”€$ adb shell
vbox86p:/ # uname -a 
Linux localhost 5.15.94-genymotion+-ab120 #1 SMP PREEMPT Fri Nov 17 14:43:15 UTC 2023 x86_64 Toybox
</pre></td></tr></tbody></table></code></pre></div></div>
<p>All I need here is this value <code class="language-plaintext highlighter-rouge">x86_64</code> android architecture as shown on screenshot below:</p>

<p><img src="/assets/img/android/008.png" alt="image" />
After having this then I will visit <a href="https://github.com/frida/frida/releases">frida</a> on github and download it.</p>

<p><img src="/assets/img/android/007.png" alt="image" />
This will be extracted and uploaded to android device.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>â””â”€$ 7z x frida-server-16.2.1-android-x86_64.xz
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Since this name is very long then I will rename it to <code class="language-plaintext highlighter-rouge">frida-server</code></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>â””â”€$ mv frida-server-16.2.1-android-x86_64 frida-server 
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="upload-frida-server-on-android-device">Upload Frida-Server on android device.</h3>
<p>The next step is to have <code class="language-plaintext highlighter-rouge">frida-server</code> on mobile device and to do this this simple command is used.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td> --><td class="rouge-code"><pre>â””â”€$ adb push frida-server /data/local/tmp/
frida-server: 1 file pushed, 0 skipped. 181.7 MB/s (108616536 bytes in 0.570s)
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Now this should execute on the device then I will give it execution permission.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>â””â”€$ adb shell "chmod 755 /data/local/tmp/frida-server"
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="ssl-unpinning">SSL unpinning</h3>
<p>Before this step we need to know the name of your package and this can be done through <code class="language-plaintext highlighter-rouge">playstore</code> on google.</p>

<p><img src="/assets/img/android/003.png" alt="image" /></p>

<p>Then <code class="language-plaintext highlighter-rouge">facebook</code> binary will have a name of <code class="language-plaintext highlighter-rouge">com.instagram.android</code>.
Now I need a <code class="language-plaintext highlighter-rouge">javascipt</code>  file for multiple unpinning this file is found on  this <a href="https://codeshare.frida.re/@akabe1/frida-multiple-unpinning">link</a>.  But for this lab I will be using <a href="https://github.com/Eltion/Instagram-SSL-Pinning-Bypass">this</a></p>
<h3 id="all-together">All together.</h3>
<ol>
  <li>Download script from <a href="https://github.com/Eltion/Instagram-SSL-Pinning-Bypass">Eltion</a>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>â””â”€$ wget https://raw.githubusercontent.com/Eltion/Instagram-SSL-Pinning-Bypass/main/instagram-ssl-pinning-bypass.js
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>Run server on your android phone emulator
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>â””â”€$ adb shell "/data/local/tmp/frida-server &amp;"
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>Shift <code class="language-plaintext highlighter-rouge">frida</code> to capture <code class="language-plaintext highlighter-rouge">usb</code>/ your mobile phone
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>â””â”€$ frida-ps -U
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>Run <code class="language-plaintext highlighter-rouge">frida</code> with <code class="language-plaintext highlighter-rouge">javacript</code> unpinning file if you have saved it manually or you can as the posts explains.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>â””â”€$  frida -U -l ./instagram-ssl-pinning-bypass.js -f com.instagram.android 
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <p><strong>Result</strong></p>
  </li>
</ol>

<p><img src="/assets/img/android/005.png" alt="image" />
<img src="/assets/img/android/004.png" alt="image" />
Now <code class="language-plaintext highlighter-rouge">Instgram</code> traffics will be captured with <code class="language-plaintext highlighter-rouge">burpsuit</code></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>Mungu Nisaidie
</pre></td></tr></tbody></table></code></pre></div></div>
:ET